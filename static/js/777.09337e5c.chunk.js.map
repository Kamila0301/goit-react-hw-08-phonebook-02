{"version":3,"file":"static/js/777.09337e5c.chunk.js","mappings":"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","sources":["components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","redux/selectors.jsx","components/ContactForm/ContactForm.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LabelStyled = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const InputStyled = styled.input`\n  width: 150px;\n\n  border: 1px solid black;\n  padding: 5px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { filtered } from '../../redux/filterSlice';\nimport React from 'react';\n\nimport { InputStyled, LabelStyled } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filterValue = useSelector(state => state.filter);\n  const changeContactFilter = event => {\n    dispatch(filtered(event.target.value.toLowerCase().trim()));\n  };\n\n  return (\n    <LabelStyled>\n      <h2>Find contacts by name</h2>\n      <InputStyled\n        type=\"text\"\n        name=\"text\"\n        value={filterValue}\n        onChange={changeContactFilter}\n      />\n    </LabelStyled>\n  );\n};\n","import styled from 'styled-components';\n\nexport const UlStyled = styled.ul`\n  justify-content: center;\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  align-items: left;\n  list-style: none;\n  gap: 10px;\n`;\n\nexport const DeleteButton = styled.button`\n  width: 50px;\n  padding: 4px;\n  margin-bottom: 10px;\n  margin-left: 10px;\n\n  font-size: 12px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from '../../redux/operations';\n\nimport { UlStyled, DeleteButton } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.items);\n  const filter = useSelector(state => state.filter);\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <UlStyled>\n      {filteredContacts.map(({ name, number, id }) => {\n        return (\n          <li key={id}>\n            {name}: {number}\n            <DeleteButton\n              type=\"button\"\n              onClick={() => dispatch(deleteContact(id))}\n            >\n              Delete\n            </DeleteButton>\n          </li>\n        );\n      })}\n    </UlStyled>\n  );\n};\n","export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n","import * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport {\n  StyledForm,\n  StyledError,\n  StyledField,\n  AddButton,\n} from './ContactForm.styled';\nimport { LabelStyled } from '../Filter/Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/operations';\nimport { selectContacts } from '../../redux/selectors';\nimport React from 'react';\nimport { filtered } from '../../redux/filterSlice';\n\nconst SignupSchema = Yup.object().shape({\n  name: Yup.string()\n    .matches(\"^[a-zA-Zа-яА-Я]+(([' \\\\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\")\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n  number: Yup.string()\n    .matches(\n      '\\\\+?\\\\d{1,4}?[ .\\\\-\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[ .\\\\-\\\\s]?\\\\d{1,4}[ .\\\\-\\\\s]?\\\\d{1,4}[ .\\\\-\\\\s]?\\\\d{1,9}'\n    )\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n});\n\nconst initialValues = { name: '', number: '' };\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={SignupSchema}\n      onSubmit={(values, actions) => {\n        const { name, number } = values;\n        if (\n          contacts.find(\n            contact => contact.name.toLowerCase() === name.toLowerCase()\n          )\n        ) {\n          return alert(`${values.name} is already in contacts`);\n        }\n        dispatch(addContact({ name, number }));\n        dispatch(filtered(''));\n        actions.resetForm();\n      }}\n    >\n      <StyledForm>\n        <LabelStyled>\n          Name\n          <StyledField name=\"name\" />\n          <StyledError name=\"name\" />\n        </LabelStyled>\n\n        <LabelStyled>\n          Phone Number\n          <StyledField name=\"number\" />\n          <StyledError name=\"number\" />\n        </LabelStyled>\n\n        <AddButton type=\"submit\">Add contact</AddButton>\n      </StyledForm>\n    </Formik>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Filter } from '../components/Filter/Filter';\nimport { ContactList } from '../components/ContactList/ContactList';\nimport { ContactForm } from '../components/ContactForm/ContactForm';\nimport { fetchContact } from '../redux/operations';\n\nfunction Contacts() {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContact());\n  }, [dispatch]);\n\n  return (\n    <section>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </section>\n  );\n}\n\nexport default Contacts;\n"],"names":["LabelStyled","styled","_templateObject","_taggedTemplateLiteral","InputStyled","_templateObject2","Filter","dispatch","useDispatch","filterValue","useSelector","state","filter","_jsxs","children","_jsx","type","name","value","onChange","event","filtered","target","toLowerCase","trim","UlStyled","DeleteButton","ContactList","contacts","items","filteredContacts","contact","includes","map","_ref","number","id","onClick","deleteContact","selectContacts","SignupSchema","Yup","shape","matches","min","max","required","initialValues","ContactForm","Formik","validationSchema","onSubmit","values","actions","find","alert","concat","addContact","resetForm","StyledForm","StyledField","StyledError","AddButton","useEffect","fetchContact"],"sourceRoot":""}